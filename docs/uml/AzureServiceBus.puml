@startuml

actor User
participant Chat.jsx
participant "chat.socket.js"
participant "socket.Chat.controller.js"
participant "Azure Blob Storage"
participant "Service Bus Queue"

User -> Chat.jsx: Send non-text message
Chat.jsx -> Chat.jsx: Check message content type
alt Message is non-text
    Chat.jsx -> "socket.Chat.controller.js": Generate SAS URL
    "socket.Chat.controller.js" -> "Azure Blob Storage": Generate SAS URL
    "Azure Blob Storage" -> "socket.Chat.controller.js": Return SAS URL
    "socket.Chat.controller.js" -> Chat.jsx: Return SAS URL
    
    Chat.jsx -> "Azure Blob Storage": Upload message content
    "Azure Blob Storage" -> Chat.jsx: Return Blob URL
    Chat.jsx -> Chat.jsx: uploadToBlob(message, sasUrl)
    
    Chat.jsx -> "chat.socket.js": socket.emit("sendMessages", { conversationId, message })
    note right: message contains Blob URL
else Message is text
    Chat.jsx -> "chat.socket.js": socket.emit("sendMessages", { conversationId, message })
end

"chat.socket.js" -> "socket.Chat.controller.js": Generate Service Bus Token
"socket.Chat.controller.js" -> "Service Bus Queue": Generate SAS Token
"Service Bus Queue" -> "socket.Chat.controller.js": Return Service Bus Token
"socket.Chat.controller.js" -> "chat.socket.js": Return Service Bus Token

"chat.socket.js" -> "Service Bus Queue": Send message with token
"Service Bus Queue" -> "chat.socket.js": Return success

@enduml
